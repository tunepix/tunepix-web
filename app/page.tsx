import { createServerComponentClient } from "@supabase/auth-helpers-nextjs";
import { cookies } from "next/headers";
import Link from "next/link";
import { LogoutButton } from "../components/logout-button";

export const dynamic = "force-dynamic";

const leaderboard = [
  { id: 0, name: "Sergusha", score: 16900 },
  { id: 1, name: "Valera", score: 14320 },
  { id: 2, name: "Antosha", score: 6340 },
  { id: 3, name: "Sashka", score: 2222 },
];

export default async function Index() {
  const supabase = createServerComponentClient({ cookies });

  const {
    data: { user },
  } = await supabase.auth.getUser();

  const { data: rooms } = await supabase.from("rooms").select();

  return (
    <div className="w-full flex flex-col items-center">
      <nav className="w-full flex justify-center border-b border-b-foreground/10 h-16">
        <div className="w-full max-w-4xl flex justify-between items-center p-3 text-sm text-foreground">
          <div className=" font-bold text-xl">
            <Link href={`/`}>tunepix</Link>
          </div>
          <div>
            {user ? (
              <div className="flex items-center gap-4">
                Hey, {user.email}!
                <LogoutButton />
              </div>
            ) : (
              <Link
                href="/login"
                className="py-2 px-4 rounded-md no-underline bg-btn-background hover:bg-btn-background-hover"
              >
                Login
              </Link>
            )}
          </div>
        </div>
      </nav>

      <div className="animate-in flex flex-col gap-14 opacity-0 max-w-4xl px-3 py-16 lg:py-24 text-foreground">
        <div className="flex flex-col items-center mb-4 lg:mb-12">
          <div className="flex gap-8 justify-center items-center">
            <span className="text-6xl">ü§ñ</span>
            <span className="border-l rotate-45 h-6" />
            <span className="text-6xl">üéµ</span>
          </div>
          <h1 className="sr-only">
            Outperform your friends in music challenge generated by robots
          </h1>
          <p className="text-3xl lg:text-4xl !leading-tight mx-auto max-w-xl text-center my-12">
            Outperform your friends in <strong>music challenge</strong>{" "}
            generated by <strong>robots</strong>
          </p>
          <div className="flex gap-4 items-center">
            <Link href={`/rooms/new`}>
              <button className="bg-foreground py-3 px-6 rounded-lg text-background">
                Create a <strong>room</strong>
              </button>
            </Link>
            or join existing
          </div>
        </div>

        <div className="w-full p-[1px] bg-gradient-to-r from-transparent via-foreground/10 to-transparent" />

        <div className="flex flex-col gap-8 text-foreground">
          <h2 className="text-lg font-bold text-center">
            Join the room or get to know leaders
          </h2>
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
            <div className="relative flex flex-col group rounded-lg border p-6 hover:border-foreground">
              <h3 className="font-bold mb-2 min-h-4 lg:min-h-6">Rooms üè†</h3>
              <div className="flex flex-col grow gap-4 justify-between">
                <p className="text-sm opacity-70">
                  Popular and recently opened rooms
                </p>
                <div className="w-full justify-center overflow-hidden">
                  {(rooms ?? []).slice(0, 5).map(({ id, name, members }) => (
                    <div
                      key={id}
                      className="w-full grid grid-cols-4 border-b last:border-b-0 text-sm"
                    >
                      <div className="col-span-3 p-4 pl-0">
                        <Link href={`/rooms/${id}`}>{name}</Link>
                      </div>
                      <div className="border-l font-bold p-4 pr-0 min-h-12 w-full">
                        üë• {members?.length ?? 0}
                      </div>
                    </div>
                  ))}
                </div>
                <ViewAllLink href="/rooms" />
              </div>
            </div>
            <div className="relative flex flex-col group rounded-lg border p-6 hover:border-foreground">
              <h3 className="font-bold mb-2 min-h-4 lg:min-h-6">
                Leaderboard üéØ
              </h3>
              <div className="flex flex-col grow gap-4 justify-between">
                <p className="text-sm opacity-70">
                  Track current leaders in realtime
                </p>
                <div className="w-full justify-center overflow-hidden">
                  {leaderboard.map(({ id, name, score }) => (
                    <div
                      key={id}
                      className="w-full grid grid-cols-4 border-b last:border-b-0 text-sm"
                    >
                      <div className="col-span-3 p-4 pl-0">
                        <Link href={`/rooms/${id}`}>{name}</Link>
                      </div>
                      <div className="border-l font-bold p-4 pr-0 min-h-12 w-full">
                        {score}
                      </div>
                    </div>
                  ))}
                </div>
                <ViewAllLink href="/leaderboard" />
              </div>
            </div>
          </div>
        </div>

        <div className="flex flex-col gap-2 justify-center text-center text-xs">
          <p>
            Powered by{" "}
            <Link
              href="https://supabase.com/"
              target="_blank"
              className="font-bold"
            >
              Supabase
            </Link>
          </p>
          <p>
            Inspired by <span className="text-base">ü§ñ</span> and{" "}
            <span className="text-base">üéµ</span>
          </p>
        </div>
      </div>
    </div>
  );
}

function ViewAllLink({ href }: { href: string }) {
  return (
    <div className="flex justify-end items-center text-sm">
      <Link
        href={href}
        className="translate-x-2 group-hover:translate-x-0 transition-all"
      >
        View all
      </Link>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
        className="ml-1 h-4 w-4 opacity-0 -translate-x-2 group-hover:translate-x-0 group-hover:opacity-100 transition-all"
      >
        <polyline points="9 18 15 12 9 6" />
      </svg>
    </div>
  );
}
